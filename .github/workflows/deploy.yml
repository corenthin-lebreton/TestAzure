name: Build and Deploy React App to Azure Container Apps

on:
  push:
    branches: [ master ]

env:
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login \
            ${{ secrets.ACR_NAME }}.azurecr.io \
            -u ${{ secrets.ACR_USERNAME }} \
            --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push image to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Grant ACR pull permission to Container App Environment
        run: |
          echo "Fetching environment and ACR info..."
          ENV_IDENTITY=$(az containerapp env show \
            --name ${{ secrets.CONTAINERAPP_ENV }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --query identity.principalId -o tsv)

          ACR_ID=$(az acr show \
            --name ${{ secrets.ACR_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --query id -o tsv)

          echo "Assigning AcrPull role to Container App environment..."
          az role assignment create \
            --assignee $ENV_IDENTITY \
            --role "AcrPull" \
            --scope $ACR_ID || echo "Role already assigned or pending propagation."

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ secrets.CONTAINERAPP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --image ${{ secrets.ACR_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
